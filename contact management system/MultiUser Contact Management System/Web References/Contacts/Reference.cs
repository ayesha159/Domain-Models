//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace MultiUser_Contact_Management_System.Contacts {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService1", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IsValidUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecoverPwdEOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecoverPwdSOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePwdOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportContactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSTGOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCbyNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCbyDobOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCbyEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowContactsSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchCbyMobOperationCompleted;
        
        private System.Threading.SendOrPostCallback SSTCOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowAllContactsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::MultiUser_Contact_Management_System.Properties.Settings.Default.MultiUser_Contact_Management_System_Contacts_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IsValidUserCompletedEventHandler IsValidUserCompleted;
        
        /// <remarks/>
        public event IsUserRegisterCompletedEventHandler IsUserRegisterCompleted;
        
        /// <remarks/>
        public event RecoverPwdECompletedEventHandler RecoverPwdECompleted;
        
        /// <remarks/>
        public event RecoverPwdSCompletedEventHandler RecoverPwdSCompleted;
        
        /// <remarks/>
        public event ChangePwdCompletedEventHandler ChangePwdCompleted;
        
        /// <remarks/>
        public event AddGroupCompletedEventHandler AddGroupCompleted;
        
        /// <remarks/>
        public event AddContactCompletedEventHandler AddContactCompleted;
        
        /// <remarks/>
        public event DeleteContactCompletedEventHandler DeleteContactCompleted;
        
        /// <remarks/>
        public event UpdateContactsCompletedEventHandler UpdateContactsCompleted;
        
        /// <remarks/>
        public event DeleteGroupCompletedEventHandler DeleteGroupCompleted;
        
        /// <remarks/>
        public event UpdateGroupCompletedEventHandler UpdateGroupCompleted;
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event GetConCompletedEventHandler GetConCompleted;
        
        /// <remarks/>
        public event ImportContactsCompletedEventHandler ImportContactsCompleted;
        
        /// <remarks/>
        public event SSTGCompletedEventHandler SSTGCompleted;
        
        /// <remarks/>
        public event SearchCbyNameCompletedEventHandler SearchCbyNameCompleted;
        
        /// <remarks/>
        public event SearchCbyDobCompletedEventHandler SearchCbyDobCompleted;
        
        /// <remarks/>
        public event SearchCbyEmailCompletedEventHandler SearchCbyEmailCompleted;
        
        /// <remarks/>
        public event ShowContactsSMSCompletedEventHandler ShowContactsSMSCompleted;
        
        /// <remarks/>
        public event SearchCbyMobCompletedEventHandler SearchCbyMobCompleted;
        
        /// <remarks/>
        public event SSTCCompletedEventHandler SSTCCompleted;
        
        /// <remarks/>
        public event ShowAllContactsCompletedEventHandler ShowAllContactsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/IsValidUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IsValidUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string curUsr, out bool IsValidUserResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool IsValidUserResultSpecified) {
            object[] results = this.Invoke("IsValidUser", new object[] {
                        userName,
                        password,
                        curUsr});
            curUsr = ((string)(results[0]));
            IsValidUserResult = ((bool)(results[1]));
            IsValidUserResultSpecified = ((bool)(results[2]));
        }
        
        /// <remarks/>
        public void IsValidUserAsync(string userName, string password, string curUsr) {
            this.IsValidUserAsync(userName, password, curUsr, null);
        }
        
        /// <remarks/>
        public void IsValidUserAsync(string userName, string password, string curUsr, object userState) {
            if ((this.IsValidUserOperationCompleted == null)) {
                this.IsValidUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidUserOperationCompleted);
            }
            this.InvokeAsync("IsValidUser", new object[] {
                        userName,
                        password,
                        curUsr}, this.IsValidUserOperationCompleted, userState);
        }
        
        private void OnIsValidUserOperationCompleted(object arg) {
            if ((this.IsValidUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidUserCompleted(this, new IsValidUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/IsUserRegister", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IsUserRegister([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MobileNo) {
            this.Invoke("IsUserRegister", new object[] {
                        userName,
                        password,
                        Email,
                        MobileNo});
        }
        
        /// <remarks/>
        public void IsUserRegisterAsync(string userName, string password, string Email, string MobileNo) {
            this.IsUserRegisterAsync(userName, password, Email, MobileNo, null);
        }
        
        /// <remarks/>
        public void IsUserRegisterAsync(string userName, string password, string Email, string MobileNo, object userState) {
            if ((this.IsUserRegisterOperationCompleted == null)) {
                this.IsUserRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserRegisterOperationCompleted);
            }
            this.InvokeAsync("IsUserRegister", new object[] {
                        userName,
                        password,
                        Email,
                        MobileNo}, this.IsUserRegisterOperationCompleted, userState);
        }
        
        private void OnIsUserRegisterOperationCompleted(object arg) {
            if ((this.IsUserRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserRegisterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/RecoverPwdE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RecoverPwdE([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email) {
            object[] results = this.Invoke("RecoverPwdE", new object[] {
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RecoverPwdEAsync(string email) {
            this.RecoverPwdEAsync(email, null);
        }
        
        /// <remarks/>
        public void RecoverPwdEAsync(string email, object userState) {
            if ((this.RecoverPwdEOperationCompleted == null)) {
                this.RecoverPwdEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecoverPwdEOperationCompleted);
            }
            this.InvokeAsync("RecoverPwdE", new object[] {
                        email}, this.RecoverPwdEOperationCompleted, userState);
        }
        
        private void OnRecoverPwdEOperationCompleted(object arg) {
            if ((this.RecoverPwdECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecoverPwdECompleted(this, new RecoverPwdECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/RecoverPwdS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RecoverPwdS([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MobNo) {
            object[] results = this.Invoke("RecoverPwdS", new object[] {
                        MobNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RecoverPwdSAsync(string MobNo) {
            this.RecoverPwdSAsync(MobNo, null);
        }
        
        /// <remarks/>
        public void RecoverPwdSAsync(string MobNo, object userState) {
            if ((this.RecoverPwdSOperationCompleted == null)) {
                this.RecoverPwdSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecoverPwdSOperationCompleted);
            }
            this.InvokeAsync("RecoverPwdS", new object[] {
                        MobNo}, this.RecoverPwdSOperationCompleted, userState);
        }
        
        private void OnRecoverPwdSOperationCompleted(object arg) {
            if ((this.RecoverPwdSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecoverPwdSCompleted(this, new RecoverPwdSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ChangePwd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangePwd([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string txtOld, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string txtNew, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string txtNewRe, out bool ChangePwdResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ChangePwdResultSpecified) {
            object[] results = this.Invoke("ChangePwd", new object[] {
                        Id,
                        txtOld,
                        txtNew,
                        txtNewRe});
            ChangePwdResult = ((bool)(results[0]));
            ChangePwdResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void ChangePwdAsync(string Id, string txtOld, string txtNew, string txtNewRe) {
            this.ChangePwdAsync(Id, txtOld, txtNew, txtNewRe, null);
        }
        
        /// <remarks/>
        public void ChangePwdAsync(string Id, string txtOld, string txtNew, string txtNewRe, object userState) {
            if ((this.ChangePwdOperationCompleted == null)) {
                this.ChangePwdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePwdOperationCompleted);
            }
            this.InvokeAsync("ChangePwd", new object[] {
                        Id,
                        txtOld,
                        txtNew,
                        txtNewRe}, this.ChangePwdOperationCompleted, userState);
        }
        
        private void OnChangePwdOperationCompleted(object arg) {
            if ((this.ChangePwdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePwdCompleted(this, new ChangePwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/AddGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string GrpName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ref string userId, out bool AddGroupResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddGroupResultSpecified) {
            object[] results = this.Invoke("AddGroup", new object[] {
                        GrpName,
                        userId});
            userId = ((string)(results[0]));
            AddGroupResult = ((bool)(results[1]));
            AddGroupResultSpecified = ((bool)(results[2]));
        }
        
        /// <remarks/>
        public void AddGroupAsync(string GrpName, string userId) {
            this.AddGroupAsync(GrpName, userId, null);
        }
        
        /// <remarks/>
        public void AddGroupAsync(string GrpName, string userId, object userState) {
            if ((this.AddGroupOperationCompleted == null)) {
                this.AddGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGroupOperationCompleted);
            }
            this.InvokeAsync("AddGroup", new object[] {
                        GrpName,
                        userId}, this.AddGroupOperationCompleted, userState);
        }
        
        private void OnAddGroupOperationCompleted(object arg) {
            if ((this.AddGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGroupCompleted(this, new AddGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/AddContact", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddContact([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string grpId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DOB, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string moblieNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string address, out bool AddContactResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool AddContactResultSpecified) {
            object[] results = this.Invoke("AddContact", new object[] {
                        userId,
                        grpId,
                        name,
                        DOB,
                        moblieNo,
                        email,
                        address});
            AddContactResult = ((bool)(results[0]));
            AddContactResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void AddContactAsync(string userId, string grpId, string name, string DOB, string moblieNo, string email, string address) {
            this.AddContactAsync(userId, grpId, name, DOB, moblieNo, email, address, null);
        }
        
        /// <remarks/>
        public void AddContactAsync(string userId, string grpId, string name, string DOB, string moblieNo, string email, string address, object userState) {
            if ((this.AddContactOperationCompleted == null)) {
                this.AddContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContactOperationCompleted);
            }
            this.InvokeAsync("AddContact", new object[] {
                        userId,
                        grpId,
                        name,
                        DOB,
                        moblieNo,
                        email,
                        address}, this.AddContactOperationCompleted, userState);
        }
        
        private void OnAddContactOperationCompleted(object arg) {
            if ((this.AddContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContactCompleted(this, new AddContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/DeleteContact", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteContact([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string idcon, out bool DeleteContactResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteContactResultSpecified) {
            object[] results = this.Invoke("DeleteContact", new object[] {
                        idcon});
            DeleteContactResult = ((bool)(results[0]));
            DeleteContactResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteContactAsync(string idcon) {
            this.DeleteContactAsync(idcon, null);
        }
        
        /// <remarks/>
        public void DeleteContactAsync(string idcon, object userState) {
            if ((this.DeleteContactOperationCompleted == null)) {
                this.DeleteContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteContactOperationCompleted);
            }
            this.InvokeAsync("DeleteContact", new object[] {
                        idcon}, this.DeleteContactOperationCompleted, userState);
        }
        
        private void OnDeleteContactOperationCompleted(object arg) {
            if ((this.DeleteContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteContactCompleted(this, new DeleteContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/UpdateContacts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateContacts([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string conid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DOB, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string moblieNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string address, out bool UpdateContactsResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateContactsResultSpecified) {
            object[] results = this.Invoke("UpdateContacts", new object[] {
                        conid,
                        name,
                        DOB,
                        moblieNo,
                        email,
                        address});
            UpdateContactsResult = ((bool)(results[0]));
            UpdateContactsResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateContactsAsync(string conid, string name, string DOB, string moblieNo, string email, string address) {
            this.UpdateContactsAsync(conid, name, DOB, moblieNo, email, address, null);
        }
        
        /// <remarks/>
        public void UpdateContactsAsync(string conid, string name, string DOB, string moblieNo, string email, string address, object userState) {
            if ((this.UpdateContactsOperationCompleted == null)) {
                this.UpdateContactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContactsOperationCompleted);
            }
            this.InvokeAsync("UpdateContacts", new object[] {
                        conid,
                        name,
                        DOB,
                        moblieNo,
                        email,
                        address}, this.UpdateContactsOperationCompleted, userState);
        }
        
        private void OnUpdateContactsOperationCompleted(object arg) {
            if ((this.UpdateContactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContactsCompleted(this, new UpdateContactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/DeleteGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string delGrp, out bool DeleteGroupResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteGroupResultSpecified) {
            object[] results = this.Invoke("DeleteGroup", new object[] {
                        delGrp});
            DeleteGroupResult = ((bool)(results[0]));
            DeleteGroupResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteGroupAsync(string delGrp) {
            this.DeleteGroupAsync(delGrp, null);
        }
        
        /// <remarks/>
        public void DeleteGroupAsync(string delGrp, object userState) {
            if ((this.DeleteGroupOperationCompleted == null)) {
                this.DeleteGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteGroup", new object[] {
                        delGrp}, this.DeleteGroupOperationCompleted, userState);
        }
        
        private void OnDeleteGroupOperationCompleted(object arg) {
            if ((this.DeleteGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGroupCompleted(this, new DeleteGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/UpdateGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateGroup([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string grpid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string grpname, out bool UpdateGroupResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateGroupResultSpecified) {
            object[] results = this.Invoke("UpdateGroup", new object[] {
                        grpid,
                        grpname});
            UpdateGroupResult = ((bool)(results[0]));
            UpdateGroupResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateGroupAsync(string grpid, string grpname) {
            this.UpdateGroupAsync(grpid, grpname, null);
        }
        
        /// <remarks/>
        public void UpdateGroupAsync(string grpid, string grpname, object userState) {
            if ((this.UpdateGroupOperationCompleted == null)) {
                this.UpdateGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupOperationCompleted);
            }
            this.InvokeAsync("UpdateGroup", new object[] {
                        grpid,
                        grpname}, this.UpdateGroupOperationCompleted, userState);
        }
        
        private void OnUpdateGroupOperationCompleted(object arg) {
            if ((this.UpdateGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGroupCompleted(this, new UpdateGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfContactsManagementSystem")]
        public myGroup[] GetData() {
            object[] results = this.Invoke("GetData", new object[0]);
            return ((myGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync() {
            this.GetDataAsync(null);
        }
        
        /// <remarks/>
        public void GetDataAsync(object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[0], this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetCon", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfContactsManagementSystem")]
        public myContacts[] GetCon() {
            object[] results = this.Invoke("GetCon", new object[0]);
            return ((myContacts[])(results[0]));
        }
        
        /// <remarks/>
        public void GetConAsync() {
            this.GetConAsync(null);
        }
        
        /// <remarks/>
        public void GetConAsync(object userState) {
            if ((this.GetConOperationCompleted == null)) {
                this.GetConOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConOperationCompleted);
            }
            this.InvokeAsync("GetCon", new object[0], this.GetConOperationCompleted, userState);
        }
        
        private void OnGetConOperationCompleted(object arg) {
            if ((this.GetConCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConCompleted(this, new GetConCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ImportContacts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ImportContacts([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string DOB, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string moblieNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string address, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string grpId) {
            object[] results = this.Invoke("ImportContacts", new object[] {
                        name,
                        DOB,
                        moblieNo,
                        email,
                        address,
                        userId,
                        grpId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ImportContactsAsync(string name, string DOB, string moblieNo, string email, string address, string userId, string grpId) {
            this.ImportContactsAsync(name, DOB, moblieNo, email, address, userId, grpId, null);
        }
        
        /// <remarks/>
        public void ImportContactsAsync(string name, string DOB, string moblieNo, string email, string address, string userId, string grpId, object userState) {
            if ((this.ImportContactsOperationCompleted == null)) {
                this.ImportContactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportContactsOperationCompleted);
            }
            this.InvokeAsync("ImportContacts", new object[] {
                        name,
                        DOB,
                        moblieNo,
                        email,
                        address,
                        userId,
                        grpId}, this.ImportContactsOperationCompleted, userState);
        }
        
        private void OnImportContactsOperationCompleted(object arg) {
            if ((this.ImportContactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportContactsCompleted(this, new ImportContactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/SSTG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfContactsManagementSystem")]
        public myContacts[] SSTG([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string grpid) {
            object[] results = this.Invoke("SSTG", new object[] {
                        userid,
                        grpid});
            return ((myContacts[])(results[0]));
        }
        
        /// <remarks/>
        public void SSTGAsync(string userid, string grpid) {
            this.SSTGAsync(userid, grpid, null);
        }
        
        /// <remarks/>
        public void SSTGAsync(string userid, string grpid, object userState) {
            if ((this.SSTGOperationCompleted == null)) {
                this.SSTGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSTGOperationCompleted);
            }
            this.InvokeAsync("SSTG", new object[] {
                        userid,
                        grpid}, this.SSTGOperationCompleted, userState);
        }
        
        private void OnSSTGOperationCompleted(object arg) {
            if ((this.SSTGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSTGCompleted(this, new SSTGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/SearchCbyName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfContactsManagementSystem")]
        public myContacts[] SearchCbyName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string grpId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name) {
            object[] results = this.Invoke("SearchCbyName", new object[] {
                        userId,
                        grpId,
                        name});
            return ((myContacts[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchCbyNameAsync(string userId, string grpId, string name) {
            this.SearchCbyNameAsync(userId, grpId, name, null);
        }
        
        /// <remarks/>
        public void SearchCbyNameAsync(string userId, string grpId, string name, object userState) {
            if ((this.SearchCbyNameOperationCompleted == null)) {
                this.SearchCbyNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCbyNameOperationCompleted);
            }
            this.InvokeAsync("SearchCbyName", new object[] {
                        userId,
                        grpId,
                        name}, this.SearchCbyNameOperationCompleted, userState);
        }
        
        private void OnSearchCbyNameOperationCompleted(object arg) {
            if ((this.SearchCbyNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCbyNameCompleted(this, new SearchCbyNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/SearchCbyDob", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfContactsManagementSystem")]
        public myContacts[] SearchCbyDob([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string grpId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dob) {
            object[] results = this.Invoke("SearchCbyDob", new object[] {
                        userId,
                        grpId,
                        dob});
            return ((myContacts[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchCbyDobAsync(string userId, string grpId, string dob) {
            this.SearchCbyDobAsync(userId, grpId, dob, null);
        }
        
        /// <remarks/>
        public void SearchCbyDobAsync(string userId, string grpId, string dob, object userState) {
            if ((this.SearchCbyDobOperationCompleted == null)) {
                this.SearchCbyDobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCbyDobOperationCompleted);
            }
            this.InvokeAsync("SearchCbyDob", new object[] {
                        userId,
                        grpId,
                        dob}, this.SearchCbyDobOperationCompleted, userState);
        }
        
        private void OnSearchCbyDobOperationCompleted(object arg) {
            if ((this.SearchCbyDobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCbyDobCompleted(this, new SearchCbyDobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/SearchCbyEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfContactsManagementSystem")]
        public myContacts[] SearchCbyEmail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string grpId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email) {
            object[] results = this.Invoke("SearchCbyEmail", new object[] {
                        userId,
                        grpId,
                        email});
            return ((myContacts[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchCbyEmailAsync(string userId, string grpId, string email) {
            this.SearchCbyEmailAsync(userId, grpId, email, null);
        }
        
        /// <remarks/>
        public void SearchCbyEmailAsync(string userId, string grpId, string email, object userState) {
            if ((this.SearchCbyEmailOperationCompleted == null)) {
                this.SearchCbyEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCbyEmailOperationCompleted);
            }
            this.InvokeAsync("SearchCbyEmail", new object[] {
                        userId,
                        grpId,
                        email}, this.SearchCbyEmailOperationCompleted, userState);
        }
        
        private void OnSearchCbyEmailOperationCompleted(object arg) {
            if ((this.SearchCbyEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCbyEmailCompleted(this, new SearchCbyEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ShowContactsSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfContactsManagementSystem")]
        public myContacts[] ShowContactsSMS([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string grpId) {
            object[] results = this.Invoke("ShowContactsSMS", new object[] {
                        userId,
                        grpId});
            return ((myContacts[])(results[0]));
        }
        
        /// <remarks/>
        public void ShowContactsSMSAsync(string userId, string grpId) {
            this.ShowContactsSMSAsync(userId, grpId, null);
        }
        
        /// <remarks/>
        public void ShowContactsSMSAsync(string userId, string grpId, object userState) {
            if ((this.ShowContactsSMSOperationCompleted == null)) {
                this.ShowContactsSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowContactsSMSOperationCompleted);
            }
            this.InvokeAsync("ShowContactsSMS", new object[] {
                        userId,
                        grpId}, this.ShowContactsSMSOperationCompleted, userState);
        }
        
        private void OnShowContactsSMSOperationCompleted(object arg) {
            if ((this.ShowContactsSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowContactsSMSCompleted(this, new ShowContactsSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/SearchCbyMob", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfContactsManagementSystem")]
        public myContacts[] SearchCbyMob([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string grpId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string mob) {
            object[] results = this.Invoke("SearchCbyMob", new object[] {
                        userId,
                        grpId,
                        mob});
            return ((myContacts[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchCbyMobAsync(string userId, string grpId, string mob) {
            this.SearchCbyMobAsync(userId, grpId, mob, null);
        }
        
        /// <remarks/>
        public void SearchCbyMobAsync(string userId, string grpId, string mob, object userState) {
            if ((this.SearchCbyMobOperationCompleted == null)) {
                this.SearchCbyMobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchCbyMobOperationCompleted);
            }
            this.InvokeAsync("SearchCbyMob", new object[] {
                        userId,
                        grpId,
                        mob}, this.SearchCbyMobOperationCompleted, userState);
        }
        
        private void OnSearchCbyMobOperationCompleted(object arg) {
            if ((this.SearchCbyMobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCbyMobCompleted(this, new SearchCbyMobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/SSTC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfContactsManagementSystem")]
        public myContacts[] SSTC([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string grpid) {
            object[] results = this.Invoke("SSTC", new object[] {
                        userid,
                        grpid});
            return ((myContacts[])(results[0]));
        }
        
        /// <remarks/>
        public void SSTCAsync(string userid, string grpid) {
            this.SSTCAsync(userid, grpid, null);
        }
        
        /// <remarks/>
        public void SSTCAsync(string userid, string grpid, object userState) {
            if ((this.SSTCOperationCompleted == null)) {
                this.SSTCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSSTCOperationCompleted);
            }
            this.InvokeAsync("SSTC", new object[] {
                        userid,
                        grpid}, this.SSTCOperationCompleted, userState);
        }
        
        private void OnSSTCOperationCompleted(object arg) {
            if ((this.SSTCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SSTCCompleted(this, new SSTCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ShowAllContacts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfContactsManagementSystem")]
        public myContacts[] ShowAllContacts([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string grpId) {
            object[] results = this.Invoke("ShowAllContacts", new object[] {
                        userId,
                        grpId});
            return ((myContacts[])(results[0]));
        }
        
        /// <remarks/>
        public void ShowAllContactsAsync(string userId, string grpId) {
            this.ShowAllContactsAsync(userId, grpId, null);
        }
        
        /// <remarks/>
        public void ShowAllContactsAsync(string userId, string grpId, object userState) {
            if ((this.ShowAllContactsOperationCompleted == null)) {
                this.ShowAllContactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowAllContactsOperationCompleted);
            }
            this.InvokeAsync("ShowAllContacts", new object[] {
                        userId,
                        grpId}, this.ShowAllContactsOperationCompleted, userState);
        }
        
        private void OnShowAllContactsOperationCompleted(object arg) {
            if ((this.ShowAllContactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowAllContactsCompleted(this, new ShowAllContactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfContactsManagementSystem")]
    public partial class myGroup {
        
        private string grpIdField;
        
        private string grpNameField;
        
        private string useridField;
        
        private string usernameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GrpId {
            get {
                return this.grpIdField;
            }
            set {
                this.grpIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GrpName {
            get {
                return this.grpNameField;
            }
            set {
                this.grpNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WcfContactsManagementSystem")]
    public partial class myContacts {
        
        private string conAddrField;
        
        private string conDobField;
        
        private string conEmailField;
        
        private string conMobField;
        
        private string conNameField;
        
        private string grpIdField;
        
        private string useridField;
        
        private string conIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ConAddr {
            get {
                return this.conAddrField;
            }
            set {
                this.conAddrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ConDob {
            get {
                return this.conDobField;
            }
            set {
                this.conDobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ConEmail {
            get {
                return this.conEmailField;
            }
            set {
                this.conEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ConMob {
            get {
                return this.conMobField;
            }
            set {
                this.conMobField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ConName {
            get {
                return this.conNameField;
            }
            set {
                this.conNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GrpId {
            get {
                return this.grpIdField;
            }
            set {
                this.grpIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string conId {
            get {
                return this.conIdField;
            }
            set {
                this.conIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void IsValidUserCompletedEventHandler(object sender, IsValidUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsValidUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string curUsr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool IsValidUserResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool IsValidUserResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void IsUserRegisterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RecoverPwdECompletedEventHandler(object sender, RecoverPwdECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecoverPwdECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecoverPwdECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RecoverPwdSCompletedEventHandler(object sender, RecoverPwdSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecoverPwdSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecoverPwdSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ChangePwdCompletedEventHandler(object sender, ChangePwdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePwdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePwdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool ChangePwdResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool ChangePwdResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AddGroupCompletedEventHandler(object sender, AddGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string userId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddGroupResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public bool AddGroupResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void AddContactCompletedEventHandler(object sender, AddContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool AddContactResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool AddContactResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DeleteContactCompletedEventHandler(object sender, DeleteContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool DeleteContactResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteContactResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateContactsCompletedEventHandler(object sender, UpdateContactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UpdateContactsResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UpdateContactsResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void DeleteGroupCompletedEventHandler(object sender, DeleteGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool DeleteGroupResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteGroupResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void UpdateGroupCompletedEventHandler(object sender, UpdateGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UpdateGroupResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UpdateGroupResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public myGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((myGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetConCompletedEventHandler(object sender, GetConCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public myContacts[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((myContacts[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ImportContactsCompletedEventHandler(object sender, ImportContactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SSTGCompletedEventHandler(object sender, SSTGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSTGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSTGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public myContacts[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((myContacts[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SearchCbyNameCompletedEventHandler(object sender, SearchCbyNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCbyNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCbyNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public myContacts[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((myContacts[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SearchCbyDobCompletedEventHandler(object sender, SearchCbyDobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCbyDobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCbyDobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public myContacts[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((myContacts[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SearchCbyEmailCompletedEventHandler(object sender, SearchCbyEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCbyEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCbyEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public myContacts[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((myContacts[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ShowContactsSMSCompletedEventHandler(object sender, ShowContactsSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowContactsSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowContactsSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public myContacts[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((myContacts[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SearchCbyMobCompletedEventHandler(object sender, SearchCbyMobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCbyMobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCbyMobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public myContacts[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((myContacts[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void SSTCCompletedEventHandler(object sender, SSTCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SSTCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SSTCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public myContacts[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((myContacts[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ShowAllContactsCompletedEventHandler(object sender, ShowAllContactsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowAllContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowAllContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public myContacts[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((myContacts[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591