//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace MultiUser_Contact_Management_System.Contacts {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService1", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IsValidUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecoverPwdEOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecoverPwdSOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::MultiUser_Contact_Management_System.Properties.Settings.Default.MultiUser_Contact_Management_System_Contacts_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IsValidUserCompletedEventHandler IsValidUserCompleted;
        
        /// <remarks/>
        public event IsUserRegisterCompletedEventHandler IsUserRegisterCompleted;
        
        /// <remarks/>
        public event RecoverPwdECompletedEventHandler RecoverPwdECompleted;
        
        /// <remarks/>
        public event RecoverPwdSCompletedEventHandler RecoverPwdSCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/IsValidUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IsValidUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, out bool IsValidUserResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool IsValidUserResultSpecified) {
            object[] results = this.Invoke("IsValidUser", new object[] {
                        userName,
                        password});
            IsValidUserResult = ((bool)(results[0]));
            IsValidUserResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void IsValidUserAsync(string userName, string password) {
            this.IsValidUserAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void IsValidUserAsync(string userName, string password, object userState) {
            if ((this.IsValidUserOperationCompleted == null)) {
                this.IsValidUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidUserOperationCompleted);
            }
            this.InvokeAsync("IsValidUser", new object[] {
                        userName,
                        password}, this.IsValidUserOperationCompleted, userState);
        }
        
        private void OnIsValidUserOperationCompleted(object arg) {
            if ((this.IsValidUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidUserCompleted(this, new IsValidUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/IsUserRegister", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IsUserRegister([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MobileNo) {
            this.Invoke("IsUserRegister", new object[] {
                        userName,
                        password,
                        Email,
                        MobileNo});
        }
        
        /// <remarks/>
        public void IsUserRegisterAsync(string userName, string password, string Email, string MobileNo) {
            this.IsUserRegisterAsync(userName, password, Email, MobileNo, null);
        }
        
        /// <remarks/>
        public void IsUserRegisterAsync(string userName, string password, string Email, string MobileNo, object userState) {
            if ((this.IsUserRegisterOperationCompleted == null)) {
                this.IsUserRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserRegisterOperationCompleted);
            }
            this.InvokeAsync("IsUserRegister", new object[] {
                        userName,
                        password,
                        Email,
                        MobileNo}, this.IsUserRegisterOperationCompleted, userState);
        }
        
        private void OnIsUserRegisterOperationCompleted(object arg) {
            if ((this.IsUserRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserRegisterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/RecoverPwdE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RecoverPwdE([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email) {
            object[] results = this.Invoke("RecoverPwdE", new object[] {
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RecoverPwdEAsync(string email) {
            this.RecoverPwdEAsync(email, null);
        }
        
        /// <remarks/>
        public void RecoverPwdEAsync(string email, object userState) {
            if ((this.RecoverPwdEOperationCompleted == null)) {
                this.RecoverPwdEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecoverPwdEOperationCompleted);
            }
            this.InvokeAsync("RecoverPwdE", new object[] {
                        email}, this.RecoverPwdEOperationCompleted, userState);
        }
        
        private void OnRecoverPwdEOperationCompleted(object arg) {
            if ((this.RecoverPwdECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecoverPwdECompleted(this, new RecoverPwdECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/RecoverPwdS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RecoverPwdS([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string MobNo) {
            object[] results = this.Invoke("RecoverPwdS", new object[] {
                        MobNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RecoverPwdSAsync(string MobNo) {
            this.RecoverPwdSAsync(MobNo, null);
        }
        
        /// <remarks/>
        public void RecoverPwdSAsync(string MobNo, object userState) {
            if ((this.RecoverPwdSOperationCompleted == null)) {
                this.RecoverPwdSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecoverPwdSOperationCompleted);
            }
            this.InvokeAsync("RecoverPwdS", new object[] {
                        MobNo}, this.RecoverPwdSOperationCompleted, userState);
        }
        
        private void OnRecoverPwdSOperationCompleted(object arg) {
            if ((this.RecoverPwdSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecoverPwdSCompleted(this, new RecoverPwdSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsValidUserCompletedEventHandler(object sender, IsValidUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsValidUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool IsValidUserResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool IsValidUserResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void IsUserRegisterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RecoverPwdECompletedEventHandler(object sender, RecoverPwdECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecoverPwdECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecoverPwdECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void RecoverPwdSCompletedEventHandler(object sender, RecoverPwdSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecoverPwdSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecoverPwdSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591